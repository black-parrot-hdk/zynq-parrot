
include $(COSIM_MK_DIR)/Makefile.env

export ELAB    ?= 1
export SYNTH   ?= 1
export IMPL    ?= 1
export HANDOFF ?= 1
export THREADS ?= 16

export VIVADO_RUN ?= export $(DEFINES) && source $(XILINX_SETTINGS) && $(VIVADO)
export VDEFINES += $(FAMILY)=1

all:
	@echo "Rules for Vivado; see $(TOP)/cosim/mk/Makefile.vivado for more:"
	@grep -o -e "^[a-Z_%\.]*:" $(TOP)/cosim/mk/Makefile.vivado

fpga_report_build_block:
	-@grep --color "CRITICAL WARNING:" vivado.log || true
	-@grep --color "ERROR:" vivado.log || true
	-@tail -n5 vivado.log
	-@grep --color "ERROR:" `find . -iname "*.log"` || true
	-@grep -m 1 -A 3 WNS $(BASENAME)_bd_proj.runs/impl_1/$(BASENAME)_bd_1_wrapper_timing_summary_routed.rpt
	-@echo "## See $(BASENAME)_bd_proj.runs/impl_1/$(BASENAME)_bd_1_wrapper_timing_summary_routed.rpt for timing report."

# this packages the IP, but does not continue to synthesis, pnr and bitfile generation
# on the x86 server
fpga_build_ip: ip_repo
ip_repo: $(FLIST) $(BUILD_COLLATERAL)
	mkdir $@
	$(VIVADO_RUN) -source $(CURR)/vivado-build-ip.tcl -mode $(VIVADO_MODE)
	-@grep --color "CRITICAL WARNING:" vivado.log || true
	-@grep --color "ERROR:" vivado.log || true
	-@tail -n5 vivado.log

fpga_build: ip_repo
	$(VIVADO_RUN) -source $(CURR)/vivado-build-bd.tcl -mode $(VIVADO_MODE)
	$(MAKE) fpga_report_build_block

# we are looking for a *_bd_1.bit, *_bd_1_bd.map, *_bd_1.hwh
# 
#
pack_bitstream:
	$(TAR) -Jc $(BASENAME)_bd_1* | $(BASE64) > ../$(BASENAME)_bd_1.$(HOST).$(BOARDNAME).tar.xz.b64

open:
	$(VIVADO) $(BASENAME)_bd_proj.xpr &

open_ip.%:
	$(VIVADO) $*_ip_proj.xpr &

clean:
	rm -rf $(BUILD_COLLATERAL)
	rm -rf xsim.dir/
	rm -rf flist*.vcs
	rm -rf *.fpga
	rm -rf *.log
	rm -rf *.jou
	rm -rf *.b64
	rm -rf *_ip_proj*
	rm -rf ip_repo
	rm -rf *_bd_proj*
	rm -rf *_bd_1.bit *_bd_1.hwh *_bd_1.tcl *_bd_1.map
	rm -rf vivado_pid*.str
	rm -rf NA/

