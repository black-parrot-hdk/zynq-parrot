
include $(COSIM_MK_DIR)/Makefile.env

CFLAGS += -DBRIDGE
CFLAGS += -DHOST_$(call bsg_fn_upper,$(HOST))
CFLAGS += $(addprefix -D,$(DEFINES))
CFLAGS += -O2
CFLAGS += -std=c++20

CINCLUDES += -I$(COSIM_INCLUDE_DIR)/common
CINCLUDES += -I$(COSIM_INCLUDE_DIR)/bridge
CINCLUDES += -I$(DESIGN_DIR)

CSOURCES += $(MAIN_PROGRAM)

EXE ?= control-program
run: ## Run a co-simulation over the UART bridge
run: $(EXE) $(RUN_COLLATERAL)
	sudo ./$< $(SIM_ARGS) | tee run.log

$(EXE): $(HOST_PROGRAM) $(BUILD_COLLATERAL)
	$(GCC) $(CFLAGS) $(LDFLAGS) $(CINCLUDES) $(CSOURCES) $< $(CFLAGS) $(LDFLAGS) -o $@

unpack_bitstream: ## Unpack the compressed bitstream onto the FPGA
	$(BASE64) -d ../$(BASENAME)_bd_1.$(HOST).$(BOARDNAME).tar.xz.b64 | $(TAR) xvJ

program_fpga: ## Program the FPGA with the unpacked bitstream
	$(VIVADO_RUN) -source $(COSIM_TCL_DIR)/program_fpga.tcl

clean: ## Cleans the directory of co-simulation runs
	rm -rf $(EXE) $(BUILD_COLLATERAL) $(SIM_COLLATERAL)
	rm -rf *.log

