#############################
# instrumentation infrastructure
#############################
# if you change this, then file IO in ps.cpp needs to change as well
INSTRUMENTATION_DIR = $(CURR)/../instrumentation
WALKER              = walker
SURELOG_RUN_DIR     = $(abspath $(INSTRUMENTATION_DIR)/surelog.run)
SURELOG_FLIST       = $(SURELOG_RUN_DIR)/flist
SURELOG_TOP_MODULE  ?= bp_be_top

$(SURELOG_FLIST): $(FLIST)
	mkdir -p $(SURELOG_RUN_DIR)
	grep -v -e "^\#" $(FLIST) >> $@
	echo +incdir+$(COSIM_DIR)/include/verilator >> $@
	sed -i '/top_zynq/d' $@

# updates Surelog CMakeLists.txt
define updateTarget
	@echo Updating Surelog CMakeLists.txt with our walker target
	sed -i '/target_link_libraries(roundtrip/a target_link_libraries($(WALKER) surelog)' $(1)
	sed -i '/add_executable(roundtrip/a add_executable($(WALKER) $${PROJECT_SOURCE_DIR}/src/$(WALKER).cpp)' $(1)
	sed -i '/set_target_properties(roundtrip/a \ \ set_target_properties($(WALKER) PROPERTIES ARCHIVE_OUTPUT_DIRECTORY $${CMAKE_CURRENT_BINARY_DIR}/bin)' $(1)
endef

# builds Surelog with our walker
# APIs change between different versions of Surelog, hence the commit particulars
define build_surelog
	echo Building Surelog
	cd $(BLACKPARROT_TOOLS_DIR); \
		cd Surelog; \
    git checkout e181f1241be19270f9b95d3a8ad1d986af7104d7; \
		git submodule update --init --recursive
	cp $(INSTRUMENTATION_DIR)/walker.cpp $(BLACKPARROT_TOOLS_DIR)/Surelog/src/
	cp $(INSTRUMENTATION_DIR)/walker.hpp $(BLACKPARROT_TOOLS_DIR)/Surelog/include/
	$(if $(shell grep walker $(BLACKPARROT_TOOLS_DIR)/Surelog/CMakeLists.txt), @echo CMakeLists.txt already updated, $(call URELOGupdateTarget, $(BLACKPARROT_TOOLS_DIR)/Surelog/CMakeLists.txt))
	make -C $(BLACKPARROT_TOOLS_DIR)/Surelog/
endef

build_surelog: $(INSTRUMENTATION_DIR)/walker.cpp $(INSTRUMENTATION_DIR)/walker.hpp
	$(call build_surelog)

SURELOG_OPTS += -sverilog
SURELOG_OPTS += -fileunit
SURELOG_OPTS += -parse
SURELOG_OPTS += -timescale=1ps/1ps 
SURELOG_OPTS += -elabuhdm 
SURELOG_OPTS += -d coveruhdm 
SURELOG_OPTS += -verbose 
SURELOG_OPTS += -nocache 
SURELOG_OPTS += -mt 12 
SURELOG_OPTS += -mp 12 
SURELOG_OPTS += -nobuiltin
SURELOG_OPTS += --top-module $(SURELOG_TOP_MODULE)
SURELOG_OPTS += -f $(SURELOG_FLIST)
#SURELOG_OPTS += -std=c++11
SURELOG_OPTS += -o $(SURELOG_RUN_DIR)
SURELOG      ?= $(BLACKPARROT_TOOLS_DIR)/Surelog/build/bin/$(WALKER)

analyze_rtl: build_surelog $(SURELOG_FLIST) $(BUILD_COLLATERAL)
	$(SURELOG) $(SURELOG_OPTS) 2>$(SURELOG_RUN_DIR)/stderr 1> $(SURELOG_RUN_DIR)/stdout

# these need to be debugged as the wires tapped into paths containing these fail synthesis and hang verilator (?)
UNIMPLEMENTED = \
  UNKNOWN_NODE \
  genblk \
  ptr_wrap \
  data_mem_fast_write \
  data_mem_fast_read \
  e_cache_data_mem_uncached \
  edge_latch \
  inside \
  realigner \
  initial_data_reg \
  NEG_ \
  data_size_op \
  CALC \
  nz.i \
  mem_reg \
  dirty \
  l2s \
  immu.tlb \
  pump_control \
  remote_did_li \
  tag_array_1g.nz \
  rr0 \
  in_fifo \
  comp_stage_r \

# filters signals from signals file
%.fsigs: %.sigs
	cat $< | wc -l
	sed 's/work@bp_unicore/blackparrot.processor.u.unicore/g' $< > $@
	sed -i '/work@/d' $@
	# unimplemented visitor pattern
	for i in $(UNIMPLEMENTED); do \
		sed -i "/$${i}/d" $@; \
	done
	cat $@ | wc -l
	sed -i '/^[^a-zA-Z]\+$$/d' $@
	sed -i "/[0-9]\+'[bdh][0-9]\+/d" $@
	sed -i '/reset/Id' $@
	sort -u -o $@ $@

collect_sigs: $(subst sigs,fsigs,$(shell find . -name *.sigs $(SURELOG_RUN_DIR)))

INSTRUMENTATION_OPTS +=  -s $(INSTRUMENTATION_DIR)/../cp_fpga.csv
INSTRUMENTATION_OPTS +=  -o $(INSTRUMENTATION_DIR)/macro

instrument: collect_sigs
	python3 $(INSTRUMENTATION_DIR)/instrument.py $(INSTRUMENTATION_OPTS)
	sed -e '/COVERAGE_MACRO/{r $(INSTRUMENTATION_DIR)/macro' -e 'd}' ../v/top_zynq.sv > $(INSTRUMENTATION_DIR)/instrumented_top_zynq.sv

clean.build_surelog:
	cd $(BLACKPARROT_TOOLS_DIR)/Surelog && git checkout CMakeLists.txt
	rm -rf $(SURELOG_RUN_DIR)

clean.instrument:
	rm -rf $(SURELOG_RUN_DIR) *fsigs $(INSTRUMENTATION_DIR)/{macro,instrumented_top_zynq.sv}
