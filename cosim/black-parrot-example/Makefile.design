TOP ?= $(shell git rev-parse --show-toplevel)
include $(TOP)/Makefile.common
include $(TOP)/Makefile.env

include $(COSIM_MK_DIR)/Makefile.common
include $(COSIM_MK_DIR)/Makefile.env
include $(DESIGN_DIR)/Makefile.hardware

#############################
# Design Settings
#############################
TB_MODULE  ?= bsg_nonsynth_zynq_testbench
BASENAME   ?= blackparrot

MAIN_PROGRAM ?= $(COSIM_CSRC_DIR)/main.cpp
HOST_PROGRAM ?= $(DESIGN_DIR)/ps.cpp

ZYNQ_PL_DEBUG ?= 0
ZYNQ_PS_DEBUG ?= 0

DROMAJO_COSIM ?= 0
BP_NCPUS ?= 1

PROG ?= hello_world
NBF_FILE ?= $(PROG).nbf

RUN_ARGS += +c_args=$(NBF_FILE)

#############################
# Design Defines
#############################
DEFINES += GP0_ENABLE=1
DEFINES += GP0_ADDR_WIDTH=10 GP0_DATA_WIDTH=32
DEFINES += GP1_ENABLE=1
DEFINES += GP1_ADDR_WIDTH=30 GP1_DATA_WIDTH=32
DEFINES += GP2_ENABLE=1
DEFINES += GP2_ADDR_WIDTH=30 GP2_DATA_WIDTH=32
DEFINES += HP0_ENABLE=1
DEFINES += HP0_ADDR_WIDTH=32 HP0_DATA_WIDTH=64
DEFINES += HP1_ENABLE=1
DEFINES += HP1_ADDR_WIDTH=32 HP1_DATA_WIDTH=32
DEFINES += ACLK_MHZ=20
DEFINES += RTCLK_MHZ=8
#DEFINES += DRAM_TEST
#DEFINES += ZERO_DRAM

DEFINES += BP_NCPUS=$(BP_NCPUS)
ifeq ($(DROMAJO_COSIM),1)
DEFINES += DROMAJO_COSIM
VSOURCES += $(BP_RTL_DIR)/bp_top/test/common/bp_nonsynth_cosim.sv
VSOURCES += $(BP_RTL_DIR)/bp_top/test/common/dromajo_cosim.cpp
CSOURCES += $(BP_TOOLS_DIR)/install/lib/libdromajo_cosim.a
endif

#############################
# Build Collateral
#############################
RISCV_OBJCOPY ?= riscv64-unknown-elf-objcopy
ASCII_TO_ROM ?= $(BASEJUMP_STL_DIR)/bsg_mem/bsg_ascii_to_rom.py

CFG ?= e_bp_unicore_zynqparrot_cfg
%/bsg_blackparrot_pkg.sv:
	echo "package bsg_blackparrot_pkg;" >> $@
	echo >> $@
	echo "import bp_common_pkg::*;" >> $@
	echo >> $@
	echo "localparam bp_params_e bp_cfg_gp = $(CFG);" >> $@
	echo >> $@
	echo "endpackage" >> $@
	echo >> $@

%/bsg_bootrom.bin: $(ZP_RISCV_DIR)/bootrom/bootrom.none.riscv
	$(RISCV_OBJCOPY) -O binary $< $@

%/bsg_bootrom.rom: %/bsg_bootrom.bin
	$(XXD) -b -g4 -c4 $< | $(AWK) '{print $$2}' > $@

%/bsg_bootrom.sv: %/bsg_bootrom.rom
	$(PYTHON2) $(ASCII_TO_ROM) $< bsg_bootrom zero > $@

BUILD_COLLATERAL  = $(DESIGN_VSRC_DIR)/bsg_blackparrot_pkg.sv
BUILD_COLLATERAL += $(DESIGN_VSRC_DIR)/bsg_bootrom.sv

#############################
# Run Collateral
#############################

VPATH := $(wildcard $(ZP_RISCV_DIR)/*)
%.mem: %.riscv
	# Cosim file must be called prog.riscv
	@$(CP) $< prog.riscv
	@$(RISCV_OBJCOPY) -O verilog $< $@
	@$(SED) -i "s/@8/@0/g" $@

BP_NBF_SCRIPT ?= $(BP_RTL_DIR)/bp_common/software/py/nbf.py
%.nbf: %.mem
	@$(PYTHON) $(BP_NBF_SCRIPT) \
		--debug --skip_zeros --config --mem $*.mem --ncpus $(BP_NCPUS) > $@

RUN_COLLATERAL = $(NBF_FILE) $(COSIM_FILE)

include $(COSIM_MK_DIR)/Makefile.$(TOOL)

