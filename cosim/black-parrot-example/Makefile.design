TOP  := $(shell git rev-parse --show-toplevel)
CURR := $(shell pwd)
include $(TOP)/Makefile.common

#############################
# Design Settings
#############################
HOST       ?= zynq
TB_MODULE  ?= bsg_nonsynth_zynq_testbench
BOARDNAME  ?= pynqz2
TOP_MODULE ?= top
BASENAME   ?= blackparrot

MAIN_PROGRAM ?= $(COSIM_CSRC_DIR)/main.cpp
HOST_PROGRAM ?= $(CURR_DESIGN_DIR)/ps.cpp

#############################
# Build Collateral
#############################
RISCV_OBJCOPY ?= riscv64-unknown-elf-dramfs-objcopy
ASCII_TO_ROM ?= $(BASEJUMP_STL_DIR)/bsg_mem/bsg_ascii_to_rom.py

CFG ?= e_bp_unicore_zynqparrot_cfg
$(CURR_VSRC_DIR)/bsg_blackparrot_pkg.sv:
	echo "package bsg_blackparrot_pkg;" >> $@
	echo >> $@
	echo "import bp_common_pkg::*;" >> $@
	echo >> $@
	echo "localparam bp_params_e bp_cfg_gp = $(CFG);" >> $@
	echo >> $@
	echo "endpackage" >> $@
	echo >> $@

$(CURR_VSRC_DIR)/bsg_bootrom.bin: $(BP_SDK_DIR)/prog/bootrom/bootrom.riscv
	$(RISCV_OBJCOPY) -O binary $< $@

$(CURR_VSRC_DIR)/bsg_bootrom.rom: $(CURR_VSRC_DIR)/bsg_bootrom.bin
	$(XXD) -b -g4 -c4 $< | $(AWK) '{print $$2}' > $@

$(CURR_VSRC_DIR)/bsg_bootrom.v: $(CURR_VSRC_DIR)/bsg_bootrom.rom
	$(PYTHON) $(ASCII_TO_ROM) $< bsg_bootrom > $@

BUILD_COLLATERAL  = $(CURR_VSRC_DIR)/bsg_blackparrot_pkg.sv
BUILD_COLLATERAL += $(CURR_VSRC_DIR)/bsg_bootrom.v

#############################
# Run Collateral
#############################
NBF_NCPUS ?= 1

VPATH := $(wildcard $(BLACKPARROT_SDK_DIR)/prog/*)
%.nbf: %.riscv
	$(RISCV_OBJCOPY) -O verilog $< $*.mem
	$(SED) -i "s/@8/@0/g" $*.mem
	$(PYTHON) $(BP_COMMON_DIR)/software/py/nbf.py \
		--debug --skip_zeros --config --mem $*.mem --ncpus $(NBF_NCPUS) > $@
	rm $*.mem

NBF_FILE ?= hello_world.nbf
ELF_FILE ?= hello_world.riscv
RUN_COLLATERAL = $(NBF_FILE)

