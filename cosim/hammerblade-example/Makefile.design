TOP ?= $(shell git rev-parse --show-toplevel)
include $(TOP)/Makefile.common
include $(TOP)/Makefile.env

include $(COSIM_MK_DIR)/Makefile.common
include $(COSIM_MK_DIR)/Makefile.env
include $(DESIGN_DIR)/Makefile.hardware

#############################
# Design Settings
#############################
TB_MODULE  ?= bsg_nonsynth_zynq_testbench
BASENAME   ?= hammerblade

MAIN_PROGRAM ?= $(COSIM_CSRC_DIR)/main.cpp
HOST_PROGRAM ?= $(DESIGN_DIR)/ps.cpp

ZYNQ_PL_DEBUG ?= 0
ZYNQ_PS_DEBUG ?= 0

RUN_ARGS += +c_args=$(NBF_FILE)

#############################
# Design Defines
#############################
DEFINES += GP0_ENABLE=1
DEFINES += GP0_ADDR_WIDTH=10 GP0_DATA_WIDTH=32
DEFINES += GP1_ENABLE=1
DEFINES += GP1_ADDR_WIDTH=30 GP1_DATA_WIDTH=32
DEFINES += HP0_ENABLE=1
DEFINES += HP0_DATA_WIDTH=32 HP0_ADDR_WIDTH=32
DEFINES += HP1_ENABLE=1
DEFINES += HP1_ADDR_WIDTH=32 HP1_DATA_WIDTH=32
DEFINES += ACLK_MHZ=55
DEFINES += RTCLK_MHZ=8
#DEFINES += VERIFY_NBF
DEFINES += NUM_BP_FINISH=1
DEFINES += NUM_MC_FINISH=1
DEFINES += BSG_MANYCORE_MACHINE_LOADER_COORD_X=2 BSG_MANYCORE_MACHINE_LOADER_COORD_Y=0

CFLAGS += -I$(BSG_REPLICANT_DIR)/libraries

#############################
# Build Collateral
#############################
export BSG_MACHINE        ?= pod_X1Y1_mesh_X2Y2_hbm_one_pseudo_channel
export BSG_MACHINE_PATH   ?= $(BSG_REPLICANT_DIR)/machines/$(BSG_MACHINE)
export RISCV_INSTALL_DIR  ?= $(ZP_INSTALL_DIR)
export RISCV_BIN_DIR      ?= $(RISCV_INSTALL_DIR)/bin
export BSG_F1_DIR         ?= $(BSG_REPLICANT_DIR)
export CFG                ?= e_bp_unicore_hammerblade_cfg

$(DESIGN_VSRC_DIR)/bsg_blackparrot_pkg.sv:
	@$(ECHO) "package bsg_blackparrot_pkg;" >> $@
	@$(ECHO) >> $@
	@$(ECHO) "import bp_common_pkg::*;" >> $@
	@$(ECHO) >> $@
	@$(ECHO) "localparam bp_params_e bp_cfg_gp = $(CFG);" >> $@
	@$(ECHO) >> $@
	@$(ECHO) "endpackage" >> $@
	@$(ECHO) >> $@

%/bsg_bladerunner_pkg.sv:
	@$(MAKE) -C $(BSG_REPLICANT_DIR)/hardware $(BSG_MACHINE_PATH)/$(@F)
	@$(MV) $(BSG_MACHINE_PATH)/$(@F) $@

%/bsg_bladerunner_configuration.sv:
	@$(eval ROM_NAME := $(subst .sv,.rom,$(@F)))
	@$(MAKE) -C $(BSG_REPLICANT_DIR)/hardware $(BSG_MACHINE_PATH)/$(ROM_NAME)
	@$(PYTHON2) $(ASCII_TO_ROM_PY) $(BSG_MACHINE_PATH)/$(ROM_NAME) bsg_bladerunner_configuration > $@
	@$(SED) -i "/parameter int bsg_machine_hetero_type_vec_gp/d" $@

%/bsg_manycore_machine.h:
	@$(MAKE) -C $(BSG_REPLICANT_DIR)/hardware $(BSG_MACHINE_PATH)/$(@F)
	@$(CP) $(BSG_MACHINE_PATH)/$(@F) $@

BUILD_COLLATERAL += $(DESIGN_VSRC_DIR)/bsg_bladerunner_pkg.sv
BUILD_COLLATERAL += $(DESIGN_VSRC_DIR)/bsg_bladerunner_configuration.sv
BUILD_COLLATERAL += $(DESIGN_DIR)/bsg_manycore_machine.h
BUILD_COLLATERAL += $(DESIGN_VSRC_DIR)/bsg_blackparrot_pkg.sv

#############################
# Run Collateral
#############################
%.riscv32:
	@$(MAKE) -C $(BSG_MANYCORE_SOFTWARE_DIR)/spmd/$* clean main.riscv
	@$(MV) $(BSG_MANYCORE_SOFTWARE_DIR)/spmd/$*/main.riscv $@

VPATH := $(wildcard $(ZP_RISCV_DIR)/*)
%.riscv64: %.riscv
	@$(CP) $< $@

%.rv64o: %.riscv
	@$(RISCV_OBJCOPY) -O binary $< $@

%.rv32o: %.riscv32
	@$(RISCV_OBJCOPY) -O binary $< $@

NBF_FILE         ?= hello.hello_world.nbf
MANYCORE_PROG    ?= $(word 1, $(subst ., ,$(NBF_FILE))).riscv32
BLACKPARROT_PROG ?= $(word 2, $(subst ., ,$(NBF_FILE))).riscv64
BLACKPARROT_OBJ  ?= $(subst .riscv64,.rv64o,$(BLACKPARROT_PROG))

COMBINED_PROG           ?= combined.riscv
MANYCORE_DRAM_BASE      ?= 0x80000000
BLACKPARROT_DRAM_OFFSET ?= 0x02000000
BLACKPARROT_DRAM_BASE   ?= $(shell printf "0x%X" $$(($(MANYCORE_DRAM_BASE) + $(BLACKPARROT_DRAM_OFFSET))))
$(COMBINED_PROG): $(MANYCORE_PROG) $(BLACKPARROT_OBJ)
	$(RISCV_OBJCOPY) $(MANYCORE_PROG) $(COMBINED_PROG) -O elf32-littleriscv --add-section .blackparrot.dram=$(BLACKPARROT_OBJ) --set-section-flags .blackparrot.dram="alloc,contents,load"  --change-section-address .text.dram=$(MANYCORE_DRAM_BASE) --change-section-address .blackparrot.dram=$(BLACKPARROT_DRAM_BASE)

# Vary per program
bsg_tiles_org_X            ?= 0
bsg_tiles_org_Y            ?= 0
bsg_tiles_X                ?= 1
bsg_tiles_Y                ?= 1
bsg_pods_X                 ?= 1
bsg_pods_Y                 ?= 1
bsg_elf_off_chip_mem       ?= 1
skip_dram_instruction_load ?= 0
skip_zeros                 ?= 1
ipoly_hashing              ?= 0
NBF_SCRIPT ?= $(BSG_MANYCORE_DIR)/software/py/nbf.py
%.nbf: $(COMBINED_PROG)
	$(eval include $(BSG_MACHINE_PATH)/Makefile.machine.include)
	@$(PYTHON2) $(NBF_SCRIPT) \
		$< \
		$(BSG_MACHINE_GLOBAL_X) $(BSG_MACHINE_GLOBAL_Y) \
		$(BSG_MACHINE_VCACHE_WAY) $(BSG_MACHINE_VCACHE_SET) \
		$(BSG_MACHINE_VCACHE_BLOCK_SIZE_WORDS) \
		$(__BSG_MACHINE_DRAMSIM3_CHIP_SIZE_IN_WORDS) $(BSG_MACHINE_MAX_EPA_WIDTH) \
		$(bsg_tiles_org_X) $(bsg_tiles_org_Y) \
		$(bsg_tiles_X) $(bsg_tiles_Y) $(bsg_elf_off_chip_mem) \
		$(BSG_MACHINE_ORIGIN_COORD_X) $(BSG_MACHINE_ORIGIN_COORD_Y) \
		$(BSG_MACHINE_PODS_X) $(BSG_MACHINE_PODS_Y) \
		$(bsg_pods_X) $(bsg_pods_Y) \
		$(skip_dram_instruction_load) \
		$(skip_zeros) \
		$(ipoly_hashing) \
		 > $@
	@$(RMRF) main_dram.mem main_dmem.mem

BP_PROG ?= hello_world
MC_PROG ?= hello
NBF_FILE ?= $(addsuffix .nbf,$(MC_PROG).$(BP_PROG))

# Manycore program . BlackParrot program
RUN_COLLATERAL = $(NBF_FILE)

include $(COSIM_MK_DIR)/Makefile.$(TOOL)

