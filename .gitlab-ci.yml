###################################################
## GitLab Setup and CI variables
###################################################

variables:
  # GitLab variables
  GIT_STRATEGY: "fetch"
  GIT_SUBMODULE_STRATEGY: "none" # We manage these manually to handle the concurrency
  # CI variables made local
  BSG_CADENV_DIR: "${CI_BSG_CADENV_DIR}"
  CORES_PER_JOB: "${CI_CORES_PER_JOB}"
  MAX_CORES: "${CI_MAX_CORES}"
  BRANCH: "{CI_COMMIT_REF_NAME}"

# We stage by tool, but there are theoretically no dependencies
#   except for vivado/zynq
stages:
  - default
  - verilator
  - vcs
  - xcelium
  - vivado
  - zynq

cache: &cache_definition
  key: zynq-parrot-${BRANCH}
  paths:
    - ./install
  policy: pull

###################################################
## Cache Management
###################################################
check_cache:
  stage: default
  dependencies: []
  variables:
    CACHE_FILE: "install/cachefile"
    LOG_FILE: "check_cache.log"
  script:
    - echo "Checkout submodules...";
      if [ ! -f "${CACHE_FILE}" ]; then
        echo "Cache not found, generating...";
        make -j ${MAX_CORES} prep_lite >> ${LOG_FILE} 2>&1;
        echo "Creating touchfile...";
        touch ${CACHE_FILE};
      else
        echo "Cache found, skipping generation...";
      fi
  cache:
    <<: *cache_definition
    policy: pull-push
  artifacts:
    when: always
    paths:
      - ${LOG_FILE}

###################################################
## Simulation Job Templates 
###################################################
.job_template:
  stage: default
  dependencies: []
  variables:
    SUBMODULE_LOCKFILE: "submodule.lock"
    SUBMODULE_FINIFILE: "submodule.fini"
    SUBMODULE_TIMEOUT:  "300"
  cache:
    <<: *cache_definition
  before_script:
      - touch ${SUBMODULE_LOCKFILE};
        exec {FD}<>${SUBMODULE_LOCKFILE};
        if ! flock -x -n $FD ; then
          echo "${SUBMODULE_LOCKFILE} not acquired; waiting...";
          until [ -e "${SUBMODULE_FINIFILE}" ]; do
            echo "${SUBMODULE_FINIFILE} not acquired; sleeping...";
            sleep 5;
          done;
          echo "${SUBMODULE_FINIFILE} acquired; proceeding...";
        else
          echo "${SUBMODULE_LOCKFILE} acquired; cloning submodules...";
          git submodule update --init import/;
          git submodule update --init --recursive import/black-parrot;
          git submodule update --init --recursive import/black-parrot-subsystems;
          git submodule update --init --recursive import/bsg_manycore;
          echo "Submodules updated, releasing ${SUBMODULE_LOCKFILE}...";
          echo "...And creating ${SUBMODULE_FINIFILE}";
        fi;

  artifacts:
    when: always
    paths:
      - ${LOG_FILE}

.example_template:
  extends: .job_template
  variables:
    LOG_FILE: "cosim/${EXAMPLE}/${TOOL}/*.log"
  script:
    - ./ci/run_example.sh ${EXAMPLE} ${TOOL}
  tags:
    - ${TOOL}

.verilator_template:
  extends: .example_template
  stage: verilator
  variables:
    TOOL: "verilator"

.vcs_template:
  extends: .example_template
  stage: vcs
  variables:
    TOOL: "vcs"

.xcelium_template:
  extends: .example_template
  stage: xcelium
  variables:
    TOOL: "xcelium"

###################################################
## Simple Example
###################################################
simple-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "simple-example"

simple-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "simple-example"

simple-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "simple-example"

###################################################
## Shell Example
###################################################
shell-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "shell-example"

shell-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "shell-example"

shell-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "shell-example"

###################################################
## Double Shell Example
###################################################
double-shell-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "double-shell-example"

double-shell-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "double-shell-example"

double-shell-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "double-shell-example"

###################################################
## Dram Example
###################################################
dram-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "dram-example"

dram-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "dram-example"

dram-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "dram-example"

###################################################
## AXI3 Example
###################################################
axi3-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "axi3-example"

axi3-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "axi3-example"

axi3-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "axi3-example"

###################################################
## AXIS Example
###################################################
axis-example-verilator:
  extends: .verilator_template
  variables:
    EXAMPLE: "axis-example"

axis-example-vcs:
  extends: .vcs_template
  variables:
    EXAMPLE: "axis-example"

axis-example-xcelium:
  extends: .xcelium_template
  variables:
    EXAMPLE: "axis-example"

##simple-example-vivado-pynqz2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="simple"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="simple-example"
##    - echo "Simple example does not have a vivado script, copying from local copy"
##    - cp $CI_MISC_DIR/simple_bd_1.zynq.pynqz2.tar.xz.b64 cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
##  artifacts:
##    paths:
##      - cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
##
##simple-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="simple"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="simple-example"
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/simple-example/zynq/run.log $TOP/cosim/simple-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/simple-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/simple-example/zynq/run.log
##  dependencies:
##    - simple-example-vivado-pynqz2
##
##shell-example-verilator:
##  <<: *job_definition
##  stage: verilator
##  tags:
##    - verilator
##  script:
##    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="shell-example"
##    - make -C cosim/shell-example/verilator/ run
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/verilator/run.log
##  artifacts:
##    paths:
##      - cosim/shell-example/verilator/run.log
##
##shell-example-vcs:
##  <<: *job_definition
##  stage: vcs
##  tags:
##    - vcs
##  script:
##    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="shell-example"
##    - make -C cosim/shell-example/vcs/ run
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/vcs/run.log
##  artifacts:
##    paths:
##      - cosim/shell-example/vcs/run.log
##
##shell-example-xcelium:
##  <<: *job_definition
##  stage: xcelium
##  tags:
##    - xcelium
##  script:
##    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="shell-example"
##    - make -C cosim/shell-example/xcelium/ run
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/xcelium/run.log
##  artifacts:
##    paths:
##      - cosim/shell-example/xcelium/run.log
##
##shell-example-vivado-pynqz2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="shell-example"
##    - echo "Building shell-example for Pynq Z2"
##    - make -C cosim/shell-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/shell-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/shell-example/vivado/vivado.log
##      - cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64
##
##shell-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="shell-example"
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/shell-example/zynq/run.log $TOP/cosim/shell-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/shell-example/zynq/run.log
##  dependencies:
##    - shell-example-vivado-pynqz2
##
##double-shell-example-verilator:
##  <<: *job_definition
##  stage: verilator
##  tags:
##    - verilator
##  script:
##    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="double-shell-example"
##    - make -C cosim/double-shell-example/verilator/ run
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/verilator/run.log
##  artifacts:
##    paths:
##      - cosim/double-shell-example/verilator/run.log
##
##double-shell-example-vcs:
##  <<: *job_definition
##  stage: vcs
##  tags:
##    - vcs
##  script:
##    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="double-shell-example"
##    - make -C cosim/double-shell-example/vcs/ run
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/vcs/run.log
##  artifacts:
##    paths:
##      - cosim/double-shell-example/vcs/run.log
##
##double-shell-example-vivado-pynqz2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="double-shell-example"
##    - echo "Building double-shell-example for Pynq Z2"
##    - make -C cosim/double-shell-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/double-shell-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/double-shell-example/vivado/vivado.log
##      - cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64
##
##double-shell-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="double-shell-example"
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/double-shell-example/zynq/run.log $TOP/cosim/double-shell-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/double-shell-example/zynq/run.log
##  dependencies:
##    - double-shell-example-vivado-pynqz2
##
##dram-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="dram"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="dram-example"
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/dram-run.sh | envsubst > $TOP/ci/dram-run-envsubst.sh
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/dram-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/dram-example/zynq/run.log $TOP/cosim/dram-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/dram-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/dram-example/zynq/run.log
##  dependencies: []
##
##black-parrot-example-verilator:
##  <<: *job_definition
##  stage: verilator
##  tags:
##    - verilator
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - make -C cosim/black-parrot-example/verilator/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/verilator/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/verilator/run.log
##
##black-parrot-example-vcs:
##  <<: *job_definition
##  stage: vcs
##  tags:
##    - vcs
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - make -C cosim/black-parrot-example/vcs/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/vcs/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/vcs/run.log
##
##black-parrot-example-vivado-pynqz2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - echo "Building black-parrot-example for Pynq Z2"
##    - make -C cosim/black-parrot-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/black-parrot-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/vivado/vivado.log
##      - cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
##
##black-parrot-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
##    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/zynq/run.log $TOP/cosim/black-parrot-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/zynq/run.log
##  dependencies:
##    - black-parrot-example-vivado-pynqz2
##
##black-parrot-example-vivado-ultra96v2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - echo "Building black-parrot-example for Ultra96v2"
##    - make -C cosim/black-parrot-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/black-parrot-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/vivado/vivado.log
##      - cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
##
##black-parrot-example-zynq-ultra96v2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="black-parrot-example"
##    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
##    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
##    - ssh xilinx@$CI_ULTRA96V2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/zynq/run.log $TOP/cosim/black-parrot-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-example/zynq/run.log
##  dependencies:
##    - black-parrot-example-vivado-ultra96v2
##
##black-parrot-minimal-example-verilator:
##  <<: *job_definition
##  stage: verilator
##  tags:
##    - verilator
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - make -C cosim/black-parrot-minimal-example/verilator/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/verilator/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/verilator/run.log
##
##black-parrot-minimal-example-vcs:
##  <<: *job_definition
##  stage: vcs
##  tags:
##    - vcs
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - make -C cosim/black-parrot-minimal-example/vcs/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/vcs/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/vcs/run.log
##
##black-parrot-minimal-example-vivado-pynqz2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - echo "Building black-parrot-minimal-example for Pynq Z2"
##    - make -C cosim/black-parrot-minimal-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/black-parrot-minimal-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/vivado/vivado.log
##      - cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
##
##black-parrot-minimal-example-zynq-pynqz2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
##    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
##    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/zynq/run.log $TOP/cosim/black-parrot-minimal-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/zynq/run.log
##  dependencies:
##    - black-parrot-minimal-example-vivado-pynqz2
##
##black-parrot-minimal-example-vivado-ultra96v2:
##  <<: *job_definition
##  stage: vivado
##  tags:
##    - vivado
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - echo "Building black-parrot-minimal-example for Ultra96v2"
##    - make -C cosim/black-parrot-minimal-example/vivado clean fpga_build
##    - echo "Packing up bitstream"
##    - make -C cosim/black-parrot-minimal-example/vivado pack_bitstream
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/vivado/vivado.log
##      - cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
##
##black-parrot-minimal-example-zynq-ultra96v2:
##  <<: *job_definition
##  stage: zynq
##  tags:
##    - zynq
##  resource_group: zynq
##  script:
##    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
##    - export EXAMPLE_NAME="black-parrot-minimal-example"
##    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
##    - $TOP/ci/fpga-setup.sh
##    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
##    - cp $TOP/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
##    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
##    - ssh xilinx@$CI_ULTRA96V2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
##    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/zynq/run.log $TOP/cosim/black-parrot-minimal-example/zynq/run.log
##    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/zynq/run.log
##  artifacts:
##    paths:
##      - cosim/black-parrot-minimal-example/zynq/run.log
##  dependencies:
##    - black-parrot-minimal-example-vivado-ultra96v2


