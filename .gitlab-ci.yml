###################################################
## GitLab Setup and CI variables
###################################################

variables:
  # GitLab variables
  GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${CI_PROJECT_NAME}-${CI_COMMIT_SHA}" # Build directory shared for a commit
  GIT_STRATEGY: "none"
  GIT_SUBMODULE_STRATEGY: "none"
  GIT_CHECKOUT: "false"
  GIT_CLEAN_FLAGS: "none"
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  CACHE_COMPRESSION_LEVEL: "fastest"
  # Other varibles
  BSG_CADENV_DIR: "${CI_BSG_CADENV_DIR}"
  CORES_PER_JOB: "${CI_CORES_PER_JOB}"
  MAX_CORES: "${CI_MAX_CORES}"
  BRANCH: "${CI_COMMIT_REF_SLUG}"
  HASH: "${CI_COMMIT_SHA}"
  REPO_URL: "${CI_REPOSITORY_URL}"
  REPO_NAME: "${CI_PROJECT_NAME}"
  JOB_NAME: "${CI_JOB_NAME_SLUG}"
  CACHE_KEY: "${REPO_NAME}-${BRANCH}" # Cache per-branch

stages:
  - repo
  - cosim

###################################################
## Creating the ${REPO_NAME} repo
###################################################
create_repo:
  stage: repo
  dependencies: []
  variables:
    # GitLab variables
    GIT_STRATEGY: "fetch"
    GIT_FETCH_EXTRA_FLAGS: "--no-tags"
    GIT_CHECKOUT: "true"
    GIT_CLEAN_FLAGS: "-ffdx"
    CACHE_FILE: "cachefile"
    LOG_FILE: "${JOB_NAME}.log"
  script:
    - echo "[CI] Doing checkout...";
    - make -j ${MAX_CORES} checkout >> ${LOG_FILE} 2>&1;
    - echo "[CI] Applying patches...";
    - make -j ${MAX_CORES} apply_patches >> ${LOG_FILE} 2>&1;
    - if [ ! -f "${CACHE_FILE}" ]; then
        echo "[CI] Cache not found, generating...";
        make -j ${MAX_CORES} prep_lite >> ${LOG_FILE} 2>&1;
        echo "[CI] Creating touchfile...";
        touch ${CACHE_FILE};
      else
        echo "[CI] Cache found, skipping generation...";
      fi
  cache:
    key: ${REPO_NAME}-${BRANCH}
    paths:
      - ./install
    policy: pull-push
  artifacts:
    when: always
    paths:
      - ${LOG_FILE}

###################################################
## Simulation Job Templates 
###################################################
.job_template:
  dependencies: []
  artifacts:
    when: always
    paths:
      - ${LOG_FILE}
  tags:
    - ${TOOL}

.cosim_template:
  stage: cosim
  extends: .job_template
  variables:
    LOG_FILE: "cosim/${EXAMPLE}/${TOOL}/*.log"
  script:
    - echo "[CI] Running ${EXAMPLE}-${TOOL}"
    - ./ci/run_example.sh ${EXAMPLE} ${TOOL}
  parallel:
    matrix:
      - TOOL: ["verilator", "vcs", "xcelium"]

###################################################
## Simple Example
###################################################
simple-example:
  variables:
    EXAMPLE: "simple-example"
  extends: .cosim_template
  needs: ["create_repo"]

#####################################################
#### Shell Example
#####################################################
shell-example:
  variables:
    EXAMPLE: "shell-example"
  extends: .cosim_template
  needs: ["simple-example"]

#####################################################
#### Double Shell Example
#####################################################
double-shell-example:
  variables:
    EXAMPLE: "double-shell-example"
  extends: .cosim_template
  needs: ["shell-example"]

#####################################################
#### Dram Example
#####################################################
dram-example:
  variables:
    EXAMPLE: "dram-example"
  extends: .cosim_template
  needs: ["double-shell-example"]

#####################################################
#### AXIS Example
#####################################################
axis-example:
  variables:
    EXAMPLE: "axis-example"
  extends: .cosim_template
  needs: ["dram-example"]

#####################################################
#### AXI3 Example
#####################################################
axi3-example:
  variables:
    EXAMPLE: "axi3-example"
  extends: .cosim_template
  needs: ["axis-example"]

####simple-example-vivado-pynqz2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="simple"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="simple-example"
####    - echo "Simple example does not have a vivado script, copying from local copy"
####    - cp $CI_MISC_DIR/simple_bd_1.zynq.pynqz2.tar.xz.b64 cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
####  artifacts:
####    paths:
####      - cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
####
####simple-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="simple"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="simple-example"
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/simple-example/simple_bd_1.zynq.pynqz2.tar.xz.b64
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/simple-example/zynq/run.log $TOP/cosim/simple-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/simple-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/simple-example/zynq/run.log
####  dependencies:
####    - simple-example-vivado-pynqz2
####
####shell-example-verilator:
####  <<: *job_definition
####  stage: verilator
####  tags:
####    - verilator
####  script:
####    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="shell-example"
####    - make -C cosim/shell-example/verilator/ run
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/verilator/run.log
####  artifacts:
####    paths:
####      - cosim/shell-example/verilator/run.log
####
####shell-example-vcs:
####  <<: *job_definition
####  stage: vcs
####  tags:
####    - vcs
####  script:
####    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="shell-example"
####    - make -C cosim/shell-example/vcs/ run
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/vcs/run.log
####  artifacts:
####    paths:
####      - cosim/shell-example/vcs/run.log
####
####shell-example-xcelium:
####  <<: *job_definition
####  stage: xcelium
####  tags:
####    - xcelium
####  script:
####    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="shell-example"
####    - make -C cosim/shell-example/xcelium/ run
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/xcelium/run.log
####  artifacts:
####    paths:
####      - cosim/shell-example/xcelium/run.log
####
####shell-example-vivado-pynqz2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="shell-example"
####    - echo "Building shell-example for Pynq Z2"
####    - make -C cosim/shell-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/shell-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/shell-example/vivado/vivado.log
####      - cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64
####
####shell-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="shell-example"
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/shell-example/shell_bd_1.zynq.pynqz2.tar.xz.b64
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/shell-example/zynq/run.log $TOP/cosim/shell-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/shell-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/shell-example/zynq/run.log
####  dependencies:
####    - shell-example-vivado-pynqz2
####
####double-shell-example-verilator:
####  <<: *job_definition
####  stage: verilator
####  tags:
####    - verilator
####  script:
####    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="double-shell-example"
####    - make -C cosim/double-shell-example/verilator/ run
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/verilator/run.log
####  artifacts:
####    paths:
####      - cosim/double-shell-example/verilator/run.log
####
####double-shell-example-vcs:
####  <<: *job_definition
####  stage: vcs
####  tags:
####    - vcs
####  script:
####    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="double-shell-example"
####    - make -C cosim/double-shell-example/vcs/ run
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/vcs/run.log
####  artifacts:
####    paths:
####      - cosim/double-shell-example/vcs/run.log
####
####double-shell-example-vivado-pynqz2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="double-shell-example"
####    - echo "Building double-shell-example for Pynq Z2"
####    - make -C cosim/double-shell-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/double-shell-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/double-shell-example/vivado/vivado.log
####      - cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64
####
####double-shell-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="double_shell"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="double-shell-example"
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/double-shell-example/double_shell_bd_1.zynq.pynqz2.tar.xz.b64
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/double-shell-example/zynq/run.log $TOP/cosim/double-shell-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/double-shell-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/double-shell-example/zynq/run.log
####  dependencies:
####    - double-shell-example-vivado-pynqz2
####
####dram-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="dram"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="dram-example"
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/dram-run.sh | envsubst > $TOP/ci/dram-run-envsubst.sh
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/dram-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/dram-example/zynq/run.log $TOP/cosim/dram-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/dram-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/dram-example/zynq/run.log
####  dependencies: []
####
####black-parrot-example-verilator:
####  <<: *job_definition
####  stage: verilator
####  tags:
####    - verilator
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - make -C cosim/black-parrot-example/verilator/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/verilator/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/verilator/run.log
####
####black-parrot-example-vcs:
####  <<: *job_definition
####  stage: vcs
####  tags:
####    - vcs
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - make -C cosim/black-parrot-example/vcs/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/vcs/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/vcs/run.log
####
####black-parrot-example-vivado-pynqz2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - echo "Building black-parrot-example for Pynq Z2"
####    - make -C cosim/black-parrot-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/black-parrot-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/vivado/vivado.log
####      - cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
####
####black-parrot-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
####    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/zynq/run.log $TOP/cosim/black-parrot-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/zynq/run.log
####  dependencies:
####    - black-parrot-example-vivado-pynqz2
####
####black-parrot-example-vivado-ultra96v2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - echo "Building black-parrot-example for Ultra96v2"
####    - make -C cosim/black-parrot-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/black-parrot-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/vivado/vivado.log
####      - cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
####
####black-parrot-example-zynq-ultra96v2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="black-parrot-example"
####    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
####    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
####    - ssh xilinx@$CI_ULTRA96V2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-example/zynq/run.log $TOP/cosim/black-parrot-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-example/zynq/run.log
####  dependencies:
####    - black-parrot-example-vivado-ultra96v2
####
####black-parrot-minimal-example-verilator:
####  <<: *job_definition
####  stage: verilator
####  tags:
####    - verilator
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - make -C cosim/black-parrot-minimal-example/verilator/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/verilator/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/verilator/run.log
####
####black-parrot-minimal-example-vcs:
####  <<: *job_definition
####  stage: vcs
####  tags:
####    - vcs
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - make -C cosim/black-parrot-minimal-example/vcs/ run NBF_FILE=$SOFTWARE_NBF_DIR/bp-tests/hello_world.nbf
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/vcs/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/vcs/run.log
####
####black-parrot-minimal-example-vivado-pynqz2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - echo "Building black-parrot-minimal-example for Pynq Z2"
####    - make -C cosim/black-parrot-minimal-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/black-parrot-minimal-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/vivado/vivado.log
####      - cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
####
####black-parrot-minimal-example-zynq-pynqz2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="pynqz2"; export VIVADO_VERSION="2022.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.pynqz2.tar.xz.b64
####    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
####    - ssh xilinx@$CI_PYNQZ2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/zynq/run.log $TOP/cosim/black-parrot-minimal-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/zynq/run.log
####  dependencies:
####    - black-parrot-minimal-example-vivado-pynqz2
####
####black-parrot-minimal-example-vivado-ultra96v2:
####  <<: *job_definition
####  stage: vivado
####  tags:
####    - vivado
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - echo "Building black-parrot-minimal-example for Ultra96v2"
####    - make -C cosim/black-parrot-minimal-example/vivado clean fpga_build
####    - echo "Packing up bitstream"
####    - make -C cosim/black-parrot-minimal-example/vivado pack_bitstream
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/vivado/vivado.log
####      - cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
####
####black-parrot-minimal-example-zynq-ultra96v2:
####  <<: *job_definition
####  stage: zynq
####  tags:
####    - zynq
####  resource_group: zynq
####  script:
####    - export BASENAME="blackparrot"; export BOARDNAME="ultra96v2"; export VIVADO_VERSION="2020.1"
####    - export EXAMPLE_NAME="black-parrot-minimal-example"
####    - export NBF_FILE=/home/xilinx/mnt/zynqparrot_nbf/bp-tests/hello_world.nbf
####    - $TOP/ci/fpga-setup.sh
####    - cat $TOP/ci/fpga-run.sh | envsubst > $TOP/ci/fpga-run-envsubst.sh
####    - cp $TOP/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64 $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/blackparrot_bd_1.zynq.ultra96v2.tar.xz.b64
####    - cp -r $SOFTWARE_NBF_DIR $CI_MOUNT_DIR/zynqparrot_nbf
####    - ssh xilinx@$CI_ULTRA96V2_IP 'bash -s ' < $TOP/ci/fpga-run-envsubst.sh
####    - cp $CI_MOUNT_DIR/zynq-parrot/cosim/black-parrot-minimal-example/zynq/run.log $TOP/cosim/black-parrot-minimal-example/zynq/run.log
####    - grep "bsg_zynq_pl:.*done() called, exiting" cosim/black-parrot-minimal-example/zynq/run.log
####  artifacts:
####    paths:
####      - cosim/black-parrot-minimal-example/zynq/run.log
####  dependencies:
####    - black-parrot-minimal-example-vivado-ultra96v2


