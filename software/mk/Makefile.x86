
-include $(X86_SDK)/bsg_cadenv/cadenv.mk
.centos_openocd_deps: | $(TARGET_DIRS)
	$(eval OPENOCD_DEPS_DIR := $(TARGET_WORK)/openocd_deps)
	$(eval export PATH := $(OPENOCD_DEPS_DIR)/bin:$(PATH))
	$(MKDIR) $@ $(OPENOCD_DEPS_DIR)
	$(CD) $(OPENOCD_DEPS_DIR)/; wget -qO- http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz | tar xzv
	$(CD) $(OPENOCD_DEPS_DIR)/; wget -qO- http://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz | tar xzv
	$(CD) $(OPENOCD_DEPS_DIR)/; wget -qO- http://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz | tar xzv
	$(CD) $(OPENOCD_DEPS_DIR)/; wget -qO- https://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz | tar xzv
	$(CD) $(OPENOCD_DEPS_DIR)/automake-1.15;   ./configure --prefix=$(OPENOCD_DEPS_DIR); make install
	$(CD) $(OPENOCD_DEPS_DIR)/autoconf-2.69;   ./configure --prefix=$(OPENOCD_DEPS_DIR); make install
	$(CD) $(OPENOCD_DEPS_DIR)/libtool-2.4.6;   ./configure --prefix=$(OPENOCD_DEPS_DIR); make install
	$(CD) $(OPENOCD_DEPS_DIR)/pkg-config-0.28; ./configure --prefix=$(OPENOCD_DEPS_DIR); make install

ifneq (,$(findstring centos,$(shell python -m platform)))
TARGET_OPENOCD_DEPS ?= .centos_openocd_deps
endif

$(X86_SDK)/lib/libpynq.a: | $(TARGET_ENV)
	touch $@

%/cadenv.mk:
	# BSG users leverage a machine-specific cadenv
	#   Here, we add sourcing to get these variables as well
	$(eval CADENV_URL := git@github.com:bespoke-silicon-group/bsg_cadenv)
	if [[ ! -z $$(git ls-remote --exit-code $(CADENV_URL) HEAD 2> /dev/null) ]]; then \
		$(ECHO) "bsg_cadenv found"; \
		$(GCLONE) $(CADENV_URL) $(@D); \
	else \
		$(ECHO) "bsg_cadenv not found"; \
		$(MKDIR) $(@D); \
		$(TOUCH) $@; \
	fi
	# Recursive make to include the new fragment
	$(MAKE) $(TARGET_ENV)

$(X86_SDK)/environment-setup-%: | $(TARGET_DIRS)
	@$(eval reg_vars := $(filter-out .%,$(sort $(.VARIABLES))))
	@$(eval env_vars := $(foreach V, $(reg_vars), \
		$(if $(filter file, $(origin $V)), \
			'$V="$($V)"')))
	$(MKDIR) $(@D)
	for e in ${env_vars}; do \
		$(ECHO) "$$e" >> $@; \
	done
	$(SED_I) "/PATH/d" $@
	$(SED_I) "/CURDIR/d" $@
	$(SED_I) "/CURR_/d" $@
	$(SED_I) "/MAKE/d" $@
	$(SED_I) "/PART/d" $@
	$(SED_I) "/SHELL/d" $@
	$(SED_I) "/TOP/d" $@
	$(ECHO) "PATH=$(TARGET_SDK)/bin:\$${PATH}" >> $@

